{
  "openapi": "3.0.1",
  "info": {
    "title": "Phonely API",
    "description": "API for Phonely services including agent management and call summaries",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.phonely.ai/api"
    }
  ],
  "paths": {
    "/get-agent": {
      "post": {
        "summary": "Get agent information",
        "description": "Retrieve agent information based on the provided user ID and agent ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/duplicate-agent": {
      "post": {
        "summary": "Duplicate an agent",
        "description": "Create a duplicate of an existing agent for the specified user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DuplicateAgentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuplicateAgentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/get-agents": {
      "post": {
        "summary": "Get agents information",
        "description": "Retrieve information for all agents associated with the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAgentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AgentInfo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/get-call": {
      "post": {
        "summary": "Get call information",
        "description": "Retrieve information for a specific call",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCallRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CallSummaryResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/import-number": {
      "post": {
        "summary": "Import number",
        "description": "Import a Twilio phone number to an agent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportNumberResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/list-voices": {
      "get": {
        "summary": "List available voices",
        "description": "Get a list of all available voices for your agent",
        "responses": {
          "200": {
            "description": "List of available voices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Voice"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/update-agent-voice": {
      "post": {
        "summary": "Update agent's voice",
        "description": "Update the for a specific agent",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAgentVoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Voice updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the update was successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or voice ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/report-call-error": {
      "post": {
        "summary": "Report an issue with a call",
        "description": "Submit an error report for a specific call with feedback and suggestions",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCallErrorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Error report submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the report was submitted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Call or agent not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/to_your_webhook_url": {
      "post": {
        "summary": "",
        "description": "",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallSummaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Call not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentRequest": {
        "type": "object",
        "required": ["uid", "agentId"],
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID"
          }
        }
      },
      "AgentResponse": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID"
          },
          "name": {
            "type": "string",
            "description": "Agent name"
          },
          "country": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "businessPhoneNumber": {
            "type": "string",
            "description": "Business phone number",
            "nullable": true
          }
        }
      },
      "DuplicateAgentRequest": {
        "type": "object",
        "required": ["uid", "agentId"],
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID to be duplicated"
          }
        }
      },
      "DuplicateAgentResponse": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "New duplicated Agent ID"
          },
          "name": {
            "type": "string",
            "description": "New duplicated Agent name"
          }
        }
      },
      "GetAgentsRequest": {
        "type": "object",
        "required": ["uid"],
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          }
        }
      },
      "GetCallRequest": {
        "type": "object",
        "required": ["uid", "agentId", "callId"],
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID (can be retrieved from the user settings page)"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID (can be retrieved from the agent settings page)"
          },
          "callId": {
            "type": "string",
            "description": "Call ID (can be retrieved from the call history page)"
          }
        }
      },
      "AgentInfo": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID"
          },
          "name": {
            "type": "string",
            "description": "Agent name"
          },
          "country": {
            "type": "string",
            "description": "Country code",
            "nullable": true
          },
          "businessPhoneNumber": {
            "type": "string",
            "description": "Business phone number",
            "nullable": true
          }
        }
      },
      "CallSummaryResponse": {
        "type": "object",
        "properties": {
          "agentName": {
            "type": "string",
            "description": "Name of the agent handling the call"
          },
          "mentionedEmail": {
            "type": "string",
            "nullable": true,
            "description": "Email address mentioned during the call"
          },
          "unansweredQuestions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of questions that were not answered during the call"
          },
          "actionItems": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of action items identified during the call"
          },
          "followUpReason": {
            "type": "string",
            "description": "Reason for any required follow-up"
          },
          "followUp": {
            "type": "string",
            "description": "Indicator if follow-up is required"
          },
          "recordingUrl": {
            "type": "string",
            "description": "URL to access the call recording"
          },
          "dashboardUrl": {
            "type": "string",
            "description": "URL to access the call dashboard"
          },
          "purpose": {
            "type": "string",
            "description": "Main purpose or topic of the call"
          },
          "sentiment": {
            "type": "string",
            "description": "Overall sentiment of the call"
          },
          "transcriptText": {
            "type": "string",
            "description": "Full text transcript of the call"
          },

          "transcript": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscriptEntry"
            },
            "description": "Structured transcript of the call"
          },
          "mentionedDate": {
            "type": "string",
            "nullable": true,
            "description": "Any specific date mentioned during the call"
          },
          "businessPhoneNumber": {
            "type": "string",
            "description": "Phone number of the agent"
          },
          "keyPoints": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Key points or highlights from the call"
          },
          "topic": {
            "type": "string",
            "description": "Main topic or category of the call"
          },
          "longSummary": {
            "type": "string",
            "nullable": true,
            "description": "Detailed summary of the call"
          },
          "callId": {
            "type": "string",
            "description": "Unique identifier for the call"
          },
          "ai_success": {
            "type": "string",
            "description": "Indicator of AI's success in handling the call"
          },
          "customerPhoneNumber": {
            "type": "string",
            "description": "Phone number of the customer"
          },
          "callStarted": {
            "type": "string",
            "format": "date-time",
            "description": "Date string when the call started"
          },
          "callEnded": {
            "type": "string",
            "format": "date-time",
            "description": "Date string when the call ended"
          },
          "duration": {
            "type": "number",
            "description": "Duration of the call in seconds"
          },
          "callerName": {
            "type": "string",
            "description": "Name of the caller"
          },
          "callDirection": {
            "type": "string",
            "description": "Direction of the call (inbound/outbound)"
          },
          "mentionedTime": {
            "type": "string",
            "nullable": true,
            "description": "Any specific time mentioned during the call"
          },
          "summary": {
            "type": "string",
            "description": "Brief summary of the call"
          },
          "endedReason": {
            "type": "string",
            "description": "Reason for the call ending"
          }
        }
      },
      "TranscriptEntry": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Content of the transcript entry"
          },
          "role": {
            "type": "string",
            "description": "Role of the speaker (e.g., assistant, user)"
          }
        }
      },
      "ImportNumberRequest": {
        "type": "object",
        "required": ["uid", "agentId", "source", "twilioAccountSid", "twilioAuthToken", "phoneNumber", "countryCode"],
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID (agent should not have a phone number assigned yet)"
          },
          "source": {
            "type": "string",
            "description": "Phone number source (currently only supports 'twilio')"
          },
          "twilioAccountSid": {
            "type": "string",
            "description": "Twilio account SID"
          },
          "twilioAuthToken": {
            "type": "string",
            "description": "Twilio auth token"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number to import, includes country code. i.e +10123456789"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code of the phone number, ISO 3166-1 alpha-2 format"
          }
        }
      },
      "ImportNumberResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message indicating the result of the operation"
          }
        }
      },
      "Voice": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the voice"
          },
          "id": {
            "type": "string",
            "description": "unique voice id, use for set agent's voice"
          },
          "gender": {
            "type": "string",
            "description": "Gender of the voice"
          },
          "language": {
            "type": "string",
            "description": "Support language of the voice"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Feature tags associated with the voice"
          },
          "accent": {
            "type": "string",
            "description": "Accent of the voice"
          },
          "isMultiLingualSupport": {
            "type": "boolean",
            "description": "Whether the voice supports multiple languages"
          }
        }
      },
      "UpdateAgentVoiceRequest": {
        "type": "object",
        "required": ["uid", "agentId", "voiceId"],
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "Agent ID to update"
          },
          "voiceId": {
            "type": "string",
            "description": "ID of the voice to assign to the agent"
          }
        }
      },
      "ReportCallErrorRequest": {
        "type": "object",
        "required": ["uid", "agentId", "callId", "email", "reason"],
        "properties": {
          "uid": {
            "type": "string",
            "description": "User ID"
          },
          "agentId": {
            "type": "string",
            "description": "ID of the agent involved in the call"
          },
          "callId": {
            "type": "string",
            "description": "ID of the call being reported"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address for feedback communication"
          },
          "reason": {
            "type": "string",
            "description": "Detailed explanation of the issue or feedback"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error code or identifier"
          },
          "message": {
            "type": "string",
            "description": "Detailed error message"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Authorization"
      }
    }
  }
}